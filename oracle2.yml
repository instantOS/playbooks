---
- name: oracle 2 setup
  hosts: oracle2
  become: yes

  vars:
    certbot_certs:
      - domains:
          - "minecraft.paperbenni.xyz"
    mpm_dir: ~/workspace/mpm-repo
    minecraft_version: "1.18"
    firewall_allowed_tcp_ports:
      - "22"
      - "25"
      - "80"
      - "443"
      - "25565"
      - "42695"
      - "3000"
      - "64738"
    firewall_allowed_udp_ports:
      - "64738"
      - "25565"
    firewall_flush_rules_and_chains: true

  vars_files:
    - vars/basics.yml
    - secrets.yml

  pre_tasks:
    - name: ensure apt cache is updated
      apt: update_cache=true cache_valid_time=3600
    - name: ensure paperbenni user exists
      user:
        name: paperbenni
        state: present
        groups: sudo
        append: yes
    - name: Ensure ssh key is authorized
      authorized_key:
        user: paperbenni
        state: present
        key: "{{ lookup('file', '/home/benjamin/.ssh/id_rsa.pub') }}"

  roles:
    - grog.sudo
    - geerlingguy.pip
    - geerlingguy.firewall
    - geerlingguy.certbot
    - robertdebock.cargo
    - geerlingguy.security
    - geerlingguy.nginx
    - geerlingguy.docker_arm

  tasks:
    - name: Ensure docroot exists
      file:
        path: "{{ nginx_docroot }}"
        state: directory
    - name: copy nginx server config
      template:
        src: templates/https-files-snapdrop.conf.j2
        dest: /etc/nginx/sites-enabled/https-letsencrypt.conf
        mode: 0644
      notify: restart nginx
      tags:
        - nginx
    - name: ensure all instantOS packages are in nginx
      copy:
        src: ~/instantbuild/
        dest: /var/www/html/
      tags:
        - html
    - name: ensure mpm is installed
      shell:
        cmd: "curl -Ls https://raw.githubusercontent.com/paperbenni/mpm/master/install.sh | bash"
        creates: /usr/local/bin/mpm
    - name: ensure java is installed
      apt: name=openjdk-17-jre
    - name: ensure extra needed packages are installed
      apt:
        name:
          - neovim
          - tmux
          - wget
          - curl
          - python3.8-venv
          - cockpit
          - opus-tools
          - nload
          - npm
          - htop
          - jq
          - ffmpeg
          - python3-virtualenv
          - zsh
          - mumble-server
    - name: update spigot
      copy:
        src: "~/workspace/mpm-repo/spigot/{{ minecraft_version }}/spigot.jar"
        dest: /home/ubuntu/spigot/spigot.jar
        owner: ubuntu
        mode: 0755
    - name: update spigot plugins
      copy:
        src: "{{ mpm_dir }}/plugins/{{ item }}/{{ minecraft_version }}/{{ item }}.jar"
        dest: "/home/ubuntu/spigot/plugins/{{ item }}.jar"
        owner: ubuntu
      with_items:
        - chat
        - essentials
        - floodgate
        - geyser
        - griefprevention
        - luckperms
        - slimefun
        - vault
        - viabackwards
        - viarewind
        - viaversion
    - name: ensure systemd user services directory exists
      file:
        name: ~/.config/systemd/user
        state: directory
      become_user: ubuntu
    - name: install spigot service
      copy:
        src: files/services/spigot.service
        dest: ~/.config/systemd/user/spigot.service
      become_user: ubuntu
    - name: enable spigot
      systemd:
        scope: user
        state: started
        enabled: yes
        name: spigot.service
      become_user: ubuntu
    - name: ensure matterbridge directory exists
      file:
        name: "/etc/matterbridge"
        state: directory
    - name: install matterbridge config
      template:
        src: templates/matterbridge.toml.j2
        dest: "/etc/matterbridge/matterbridge.toml"
        mode: 0644
    - name: install matterbridge service
      copy:
        src: files/services/matterbridge.service
        dest: /etc/systemd/system/matterbridge.service
        mode: 0644
    - name: check latest matterbridge
      uri:
        url: https://api.github.com/repos/42wim/matterbridge/releases/latest
        return_content: true
      register: matterbridge_latest
    - name: "installing matterbridge {{ matterbridge_latest.json.tag_name }}"
      loop: "{{ matterbridge_latest.json.assets }}"
      when: "'linux-arm64' in item.name"
      get_url:
        url: "{{ item.browser_download_url }}"
        dest: /usr/local/bin/matterbridge
        mode: 0755

    - name: ensure mumble-server has required permissions
      debconf:
        name: mumble-server/use_capabilities
        question: mumble-server/use_capabilities
        value: "true"
        vtype: select
    - name: ensure mumble-server autostarts daemon
      debconf:
        name: mumble-server/start_daemon
        question: mumble-server/start_daemon
        value: "true"
        vtype: select
    - name: ensure mumble server superuser password is set
      debconf:
        name: mumble-server/password
        question: mumble-server/password
        value: "{{ mumble_password }}"
        vtype: password
      no_log: True
    - name: install mumble-server config
      template:
        src: templates/mumble-server.ini.j2
        dest: /etc/mumble-server.ini
        mode: 0644
      notify: restart mumble
    - name: ensure opt programs directory exists
      file:
        name: /opt/programs
        state: directory
    - name: Git checkout
      git:
        repo: "https://github.com/azlux/botamusique.git"
        dest: /opt/programs/botamusique
        force: yes
        version: 7.2.2
    - name: ensure wheel is installed for botamusique
      pip:
        name: wheel
        virtualenv: /opt/programs/botamusique/venv
    - name: ensure botamusique dependencies are installed
      pip:
        requirements: /opt/programs/botamusique/requirements.txt
        virtualenv: /opt/programs/botamusique/venv
    - name: ensure botamusique config is installed
      copy:
        src: files/config/botamusique_config.ini
        dest: /opt/programs/botamusique/configuration.ini
    - name: install botamusique systemd service
      copy:
        src: files/services/botamusique.service
        dest: /etc/systemd/system/botamusique.service
        mode: 0644
    - name: ensure systemd services are enabled
      systemd:
        state: started
        enabled: yes
        name: "{{ item }}.service"
      with_items:
        - botamusique
        - matterbridge
        - mumble-server
    - name: ensure snapdrop is running
      docker_compose:
        project_name: snapdrop
        definition:
          version: "2.1"
          services:
            snapdrop:
              image: paperbenni/snapdrop
              container_name: snapdrop
              environment:
                - PUID=1000
                - PGID=1000
                - TZ=Europe/Berlin
              volumes:
                - /data/snapdrop/config:/config
              ports:
                - 8084:80
                - 8085:443
              restart: unless-stopped
      tags:
        - docker

  handlers:
    - import_tasks: handlers/basics.yml
    - name: restart mumble
      service:
        name: mumble-server
        state: restarted
